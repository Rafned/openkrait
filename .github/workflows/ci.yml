---
name: CI
on:
  - push
  - pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  smoke-k8s:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Minikube
        uses: medyagh/setup-minikube@master
        with:
          driver: docker
          kubernetes-version: v1.26.0
      - name: Verify Minikube setup
        run: |
          minikube status
          kubectl cluster-info
          kubectl get nodes
      - name: Deploy vulnerable pod
        run: |
          cat <<EOF > bad.yaml
          apiVersion: v1
          kind: Pod
          metadata:
            name: bad-pod
            namespace: default
          spec:
            containers:
            - name: nginx
              image: nginx:1.14.2
              imagePullPolicy: IfNotPresent
          EOF

          kubectl apply -f bad.yaml --validate=false
          sleep 20
          kubectl get pods -o wide
      - name: Build Docker image
        run: |
          docker build -t openkrait:test .
      - name: Test OpenKrait without Docker
        run: |
          # Устанавливаем OpenKrait на хост и тестируем напрямую
          pip install -e .
          output=$(openkrait scan-k8s 2>&1)
          echo "$output"
          if echo "$output" | grep -q "nginx:1\.14"; then
            echo "✅ Уязвимость обнаружена (без Docker)"
          else
            echo "❌ Уязвимость не обнаружена (без Docker)"
            exit 1
          fi
      - name: Test OpenKrait with Docker (alternative approach)
        run: |
          # Альтернативный подход: запускаем OpenKrait внутри Minikube
          minikube image load openkrait:test

          # Создаем Job для запуска сканера внутри кластера
          cat <<EOF | kubectl apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: openkrait-test
          spec:
            template:
              spec:
                containers:
                - name: openkrait
                  image: openkrait:test
                  command: ["openkrait", "scan-k8s"]
                  imagePullPolicy: Never
                restartPolicy: Never
            backoffLimit: 1
          EOF

          # Ждем завершения Job
          sleep 30
          kubectl logs job/openkrait-test

          # Проверяем результаты
          output=$(kubectl logs job/openkrait-test 2>&1)
          echo "$output"
          if echo "$output" | grep -q "nginx:1\.14"; then
            echo "✅ Уязвимость обнаружена (в Docker внутри Minikube)"
          else
            echo "❌ Уязвимость не обнаружена (в Docker внутри Minikube)"
            exit 1
          fi
      - name: Cleanup
        if: always()
        run: |
          kubectl delete job openkrait-test --ignore-not-found
          kubectl delete pod bad-pod --ignore-not-found
          minikube stop
          minikube delete
