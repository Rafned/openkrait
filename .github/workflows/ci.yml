---
name: CI
on:
  - push
  - pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  smoke-k8s:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Minikube
        uses: medyagh/setup-minikube@master
        with:
          driver: docker
          kubernetes-version: v1.26.0
      - name: Verify Minikube setup
        run: |
          minikube status
          kubectl cluster-info
          kubectl get nodes
      - name: Deploy vulnerable pod
        run: |
          cat <<EOF > bad.yaml
          apiVersion: v1
          kind: Pod
          metadata:
            name: bad-pod
            namespace: default
          spec:
            containers:
            - name: nginx
              image: nginx:1.14.2
              imagePullPolicy: IfNotPresent
          EOF

          kubectl apply -f bad.yaml --validate=false

          # Ждем создания pod
          echo "Ожидание создания pod..."
          sleep 20

          kubectl get pods -o wide
          kubectl describe pod bad-pod
      - name: Build Docker image
        run: |
          docker build -t openkrait:test .
      - name: Test Kubernetes Scanner
        run: |+
          echo "Проверка kubeconfig:"
          ls -la ~/.kube/
          kubectl config view

          # Запускаем сканер с правильным монтированием
          docker run --rm \
            -v $HOME/.kube:/root/.kube:ro \
            -v $HOME/.minikube:$HOME/.minikube:ro \
            openkrait:test openkrait scan-k8s
            
      - name: Verify scan results
        run: |
          output=$(docker run --rm \
            -v $HOME/.kube:/root/.kube:ro \
            -v $HOME/.minikube:$HOME/.minikube:ro \
            openkrait:test openkrait scan-k8s 2>&1)

          echo "Scan output:"
          echo "$output"

          if echo "$output" | grep -q "nginx:1\.14"; then
            echo "✅ Уязвимость обнаружена"
          else
            echo "❌ Уязвимость не обнаружена"
            echo "Детальный вывод:"
            echo "$output"
            exit 1
          fi
      - name: Debug info if failed
        if: failure()
        run: |
          echo "=== DEBUG INFORMATION ==="
          echo "KUBECONFIG: $KUBECONFIG"
          echo "Current kubeconfig:"
          kubectl config view
          echo "Pods:"
          kubectl get pods -A
          echo "Nodes:"
          kubectl get nodes
          echo "Minikube status:"
          minikube status
